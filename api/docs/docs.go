// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Evans Owamoyo",
            "email": "evans.dev99@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "returns all the accounts for the currently logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "get all user accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.AccountDTO"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "creates a new account for the currently logged-in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "creates a new account for the currently logged-in user",
                "parameters": [
                    {
                        "description": "login user request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.createAccountReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.createAccountRes"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "login with phone and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login with phone and password",
                "parameters": [
                    {
                        "description": "login user request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.loginUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.loginUserRes"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "register a new user",
                "parameters": [
                    {
                        "description": "create user request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.createUserReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.createUserRes"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "get all accounts transactions for the logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "get all accounts transactions for the logged-in user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.TransactionSummaryDTO"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transactions/deposit": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "deposit a specified amount to a user's account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "deposit a specified amount to a user's account",
                "parameters": [
                    {
                        "description": "create deposit request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.createDeposit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.TransactionDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transactions/transfer": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "transfer a specified amount from a user's account to another account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "transfer a specified amount from a user's account to another account",
                "parameters": [
                    {
                        "description": "create transfer request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.createTransfer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.TransactionDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transactions/withdraw": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "withdraw a specified amount from a user's account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "withdraw a specified amount from a user's account",
                "parameters": [
                    {
                        "description": "create withdraw request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.createWithdraw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.TransactionDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "get one account transactions for the logged-in user by account id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "get one account transactions for the logged-in user by account id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "account id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.TransactionSummaryDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.JSON"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Error"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gomoney.Currency": {
            "type": "string",
            "enum": [
                "USD",
                "RUB",
                "NGN"
            ],
            "x-enum-varnames": [
                "USD",
                "RUB",
                "NGN"
            ]
        },
        "handlers.AccountDTO": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_blocked": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handlers.TransactionDTO": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "from": {
                    "$ref": "#/definitions/handlers.AccountDTO"
                },
                "id": {
                    "type": "string"
                },
                "to": {
                    "$ref": "#/definitions/handlers.AccountDTO"
                }
            }
        },
        "handlers.TransactionSummaryDTO": {
            "type": "object",
            "properties": {
                "account_id": {
                    "$ref": "#/definitions/handlers.AccountDTO"
                },
                "transaction": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TransactionDTO"
                    }
                }
            }
        },
        "handlers.UserDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "handlers.createAccountReq": {
            "type": "object",
            "required": [
                "currency",
                "description",
                "title"
            ],
            "properties": {
                "currency": {
                    "enum": [
                        "USD",
                        "RUB",
                        "NGN"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/gomoney.Currency"
                        }
                    ]
                },
                "description": {
                    "type": "string",
                    "minLength": 5
                },
                "title": {
                    "type": "string",
                    "minLength": 5
                }
            }
        },
        "handlers.createAccountRes": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.createDeposit": {
            "type": "object",
            "required": [
                "amount",
                "to_account_id"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 1
                },
                "to_account_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "handlers.createTransfer": {
            "type": "object",
            "required": [
                "amount",
                "from_account_id",
                "to_account_id"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 1
                },
                "from_account_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "to_account_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "handlers.createUserReq": {
            "type": "object",
            "required": [
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "handlers.createUserRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "handlers.createWithdraw": {
            "type": "object",
            "required": [
                "amount",
                "from_account_id"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 1
                },
                "from_account_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "handlers.loginUserReq": {
            "type": "object",
            "required": [
                "password",
                "phone"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "handlers.loginUserRes": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/handlers.UserDTO"
                }
            }
        },
        "response.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.JSON": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "bearerAuth": {
            "description": "Bearer \u003ctoken\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "GoMoni API",
	Description:      "This is the API for GoMoni, a simple money management application.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
