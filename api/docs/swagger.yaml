definitions:
  gomoney.Currency:
    enum:
    - USD
    - RUB
    - NGN
    type: string
    x-enum-varnames:
    - USD
    - RUB
    - NGN
  handlers.AccountDTO:
    properties:
      balance:
        type: number
      currency:
        type: string
      description:
        type: string
      id:
        type: integer
      is_blocked:
        type: boolean
      title:
        type: string
    type: object
  handlers.TransactionDTO:
    properties:
      amount:
        type: number
      created_at:
        type: string
      from:
        $ref: '#/definitions/handlers.AccountDTO'
      id:
        type: string
      to:
        $ref: '#/definitions/handlers.AccountDTO'
    type: object
  handlers.TransactionSummaryDTO:
    properties:
      account_id:
        $ref: '#/definitions/handlers.AccountDTO'
      transaction:
        items:
          $ref: '#/definitions/handlers.TransactionDTO'
        type: array
    type: object
  handlers.UserDTO:
    properties:
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  handlers.createAccountReq:
    properties:
      currency:
        allOf:
        - $ref: '#/definitions/gomoney.Currency'
        enum:
        - USD
        - RUB
        - NGN
      description:
        minLength: 5
        type: string
      title:
        minLength: 5
        type: string
    required:
    - currency
    - description
    - title
    type: object
  handlers.createAccountRes:
    properties:
      id:
        type: integer
      message:
        type: string
    type: object
  handlers.createDeposit:
    properties:
      amount:
        minimum: 1
        type: number
      to_account_id:
        minimum: 1
        type: integer
    required:
    - amount
    - to_account_id
    type: object
  handlers.createTransfer:
    properties:
      amount:
        minimum: 1
        type: number
      from_account_id:
        minimum: 1
        type: integer
      to_account_id:
        minimum: 1
        type: integer
    required:
    - amount
    - from_account_id
    - to_account_id
    type: object
  handlers.createUserReq:
    properties:
      name:
        type: string
      password:
        minLength: 8
        type: string
      phone:
        type: string
    required:
    - name
    - password
    - phone
    type: object
  handlers.createUserRes:
    properties:
      message:
        type: string
      user_id:
        type: string
    type: object
  handlers.createWithdraw:
    properties:
      amount:
        minimum: 1
        type: number
      from_account_id:
        minimum: 1
        type: integer
    required:
    - amount
    - from_account_id
    type: object
  handlers.loginUserReq:
    properties:
      password:
        minLength: 6
        type: string
      phone:
        type: string
    required:
    - password
    - phone
    type: object
  handlers.loginUserRes:
    properties:
      token:
        description: Token is the JWT token that can be used to authenticate for other
          routes.
        type: string
      user:
        allOf:
        - $ref: '#/definitions/handlers.UserDTO'
        description: User is the user object for the user that was logged in.
    type: object
  response.Error:
    properties:
      code:
        type: integer
      error:
        type: string
      message:
        type: string
    type: object
  response.JSON:
    properties:
      success:
        type: boolean
    type: object
info:
  contact:
    email: evans.dev99@gmail.com
    name: Evans Owamoyo
  description: This is the API for GoMoni, a simple money management application.
  title: GoMoni API
  version: "1.0"
paths:
  /accounts:
    get:
      description: returns all the accounts for the currently logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handlers.AccountDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
      security:
      - bearerAuth: []
      summary: get all user accounts
      tags:
      - accounts
    post:
      consumes:
      - application/json
      description: creates a new account for the currently logged-in user
      parameters:
      - description: login user request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.createAccountReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                data:
                  $ref: '#/definitions/handlers.createAccountRes'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
      security:
      - bearerAuth: []
      summary: creates a new account for the currently logged-in user
      tags:
      - accounts
  /accounts/{id}:
    delete:
      description: deletes an account for the currently logged-in user
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
      security:
      - bearerAuth: []
      summary: deletes an account for the currently logged-in user
      tags:
      - accounts
  /login:
    post:
      consumes:
      - application/json
      description: login with phone and password
      parameters:
      - description: login user request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.loginUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                data:
                  $ref: '#/definitions/handlers.loginUserRes'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
      summary: login with phone and password
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: create user request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.createUserReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                data:
                  $ref: '#/definitions/handlers.createUserRes'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
      summary: register a new user
      tags:
      - auth
  /transactions:
    get:
      description: get all accounts transactions for the logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handlers.TransactionSummaryDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
      security:
      - bearerAuth: []
      summary: get all accounts transactions for the logged-in user
      tags:
      - transactions
  /transactions/{id}:
    get:
      description: get one account transactions for the logged-in user by account
        id
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                data:
                  $ref: '#/definitions/handlers.TransactionSummaryDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
      security:
      - bearerAuth: []
      summary: get one account transactions for the logged-in user by account id
      tags:
      - transactions
  /transactions/deposit:
    post:
      consumes:
      - application/json
      description: deposit a specified amount to a user's account
      parameters:
      - description: create deposit request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.createDeposit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                data:
                  $ref: '#/definitions/handlers.TransactionDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
      security:
      - bearerAuth: []
      summary: deposit a specified amount to a user's account
      tags:
      - transactions
  /transactions/transfer:
    post:
      consumes:
      - application/json
      description: transfer a specified amount from a user's account to another account
      parameters:
      - description: create transfer request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.createTransfer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                data:
                  $ref: '#/definitions/handlers.TransactionDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
      security:
      - bearerAuth: []
      summary: transfer a specified amount from a user's account to another account
      tags:
      - transactions
  /transactions/withdraw:
    post:
      consumes:
      - application/json
      description: withdraw a specified amount from a user's account
      parameters:
      - description: create withdraw request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.createWithdraw'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                data:
                  $ref: '#/definitions/handlers.TransactionDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSON'
            - properties:
                error:
                  items:
                    $ref: '#/definitions/response.Error'
                  type: array
              type: object
      security:
      - bearerAuth: []
      summary: withdraw a specified amount from a user's account
      tags:
      - transactions
securityDefinitions:
  bearerAuth:
    description: Bearer <token>
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
